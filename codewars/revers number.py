# - Ваша задача - создать функцию, которая может принимать любое неотрицательное целое число в качестве аргумента и возвращать
его с его цифрами в порядке убывания. 
# 
# - По сути, переставить цифры, чтобы создать максимально возможное число.

def descending_order(num):
	# если число больше и равно 10, то проводим преобразование
    if num >= 10:
    	# перевод числа в строку для подсчета его блины
    	s_num = str(num)
    	# нужно, чтоб потом выйти из цикла
    	i = 0
    	l_str_num = len(s_num)
    	lst = []
    	# пока переменная меньше длины числа, переведенного в строку
    	while i < len(s_num):
    		# разбиваем переданное число на отдельные цифры и добавляем в список lst  
    		count = (num // 10 ** (l_str_num - 1))
    		num -= count * 10 ** (l_str_num - 1)
    		i += 1
    		l_str_num -= 1
    		lst.append(count)
    		# сортируем список
    		sort_lst = lst.sort()
    		# преобразуем список, где последнее число становится первым, а первое число - последним
    		revers_list = lst[::-1]
    		# с функцию join list comprehension, который преобразует числа в строки и убираем с помощью join запятые  
    		str_lst = ''.join([str(i) for i in revers_list])
    	# преобразуем полученную строку в число
    	return int(str_lst)
    # иначе возвращаем число, которое передали
    else:
    	return num 
    		#print(countin)
print(descending_order(1274865190802475892))